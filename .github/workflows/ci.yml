name: RoboRally Frontend CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  typescript-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type check
        run: npm run type-check

  eslint-check:
    name: ESLint Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  build-check:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [typescript-check, eslint-check]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js application
        run: npm run build
        env:
          CI: true

      - name: Verify build output
        run: |
          if [ ! -d ".next" ]; then
            echo "‚ùå Build failed - .next directory not found"
            exit 1
          else
            echo "‚úÖ Build successful - .next directory created"
          fi

  test-check:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for tests and run if available
        run: |
          if grep -q "\"test\":" package.json; then
            echo "üß™ Running tests..."
            npm test
          else
            echo "‚ÑπÔ∏è No tests found - skipping test step"
          fi

  all-checks-passed:
    name: Checks Passed ‚úÖ
    runs-on: ubuntu-latest
    needs: [typescript-check, eslint-check, build-check, test-check]
    steps:
      - name: Final confirmation
        run: echo "Check Complete ready to merge"
